name: Rust  Release

on:
  push:
    tags:
      - 'v*'
    branches-ignore:
      - '**'

jobs:
  release-allos:
    name: release for all OS
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - windows-latest
        - macOS-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2
      - name: Setup | Rust
        uses: dtolnay/rust-toolchain@0e66bd3e6b38ec0ad5312288c83e47c143e6b09e
        with:
          toolchain: stable
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Deactivate rusty-hook dependencie
        run: sed -ie "/^rusty-hook/s/^/#/" Cargo.toml   
      - name: Install alsa lib on linux
        run: |
          sudo apt-get update 
          sudo apt-get install libasound2-dev libpulse0
        if: matrix.os == 'ubuntu-latest'
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command:  test
      - name: Build | Check
        uses: actions-rs/cargo@v1
        env:
          RUSTFLAGS: "-D warnings" # Disallow warnings
        with:
          command:  build
          args: --release --locked
      - name: Get the version
        id: get_version
        run: echo ::set-output name=SOURCE_TAG::${GITHUB_REF/refs\/tags\//}
        shell: bash
      - name: upload to gitlab
        env:
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
          OS: ${{ matrix.os }}
          SOURCE_TAG: ${{ steps.get_version.outputs.SOURCE_TAG }}
        shell: bash
        run: |
          if [[ $OS == macOS-latest ]] ; then curl -f --user ignored:$GITLAB_TOKEN --upload-file target/release/automattermostatus https://gitlab.com/api/v4/projects/30645379/packages/generic/binaries/"${SOURCE_TAG}"/automattermostatus-macos-amd64 ; else  true; fi
          if [[ $OS == ubuntu-latest ]] ; then strip --strip-debug target/release/automattermostatus; curl -f --user ignored:$GITLAB_TOKEN --upload-file target/release/automattermostatus https://gitlab.com/api/v4/projects/30645379/packages/generic/binaries/"${SOURCE_TAG}"/automattermostatus-linux-amd64 ; else  true; fi
          if [[ $OS == windows-latest ]] ; then curl -f --user ignored:$GITLAB_TOKEN --upload-file target/release/automattermostatus.exe https://gitlab.com/api/v4/projects/30645379/packages/generic/binaries/"${SOURCE_TAG}"/automattermostatus-windows-amd64.exe ; else  true; fi


#  package:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@master
#      - name: Deb Build
#        uses: matclab/cargo-deb-amd64-ubuntu@1.3
#      - name: Get the version
#        id: get_version
#        run: echo ::set-output name=SOURCE_TAG::${GITHUB_REF/refs\/tags\//}
#        shell: bash
#      - name: upload to gitlab
#        env:
#          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
#          OS: ${{ matrix.os }}
#          SOURCE_TAG: ${{ steps.get_version.outputs.SOURCE_TAG }}
#        shell: bash
#        run: |
#          curl -f --user ignored:$GITLAB_TOKEN --upload-file target/x86_64-unknown-linux-musl/debian/automattermostatus_*_amd64.deb https://gitlab.com/api/v4/projects/30645379/packages/generic/binaries/"${SOURCE_TAG}/automattermostatus_${SOURCE_TAG}_amd64.deb"
